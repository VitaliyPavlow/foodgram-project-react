# Generated by Django 3.2 on 2023-07-11 07:41

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re


class Migration(migrations.Migration):
    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("recipe", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="RecipeIngredient",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=1,
                        max_digits=6,
                        validators=[
                            django.core.validators.MinValueValidator(1)
                        ],
                        verbose_name="Количество",
                    ),
                ),
            ],
        ),
        migrations.DeleteModel(
            name="Favorites",
        ),
        migrations.DeleteModel(
            name="Subscription",
        ),
        migrations.AlterModelOptions(
            name="ingredient",
            options={
                "ordering": ("name",),
                "verbose_name": "Ингредиент",
                "verbose_name_plural": "Ингредиенты",
            },
        ),
        migrations.AlterModelOptions(
            name="recipe",
            options={
                "ordering": ("name",),
                "verbose_name": "Рецепт",
                "verbose_name_plural": "Рецепты",
            },
        ),
        migrations.AlterModelOptions(
            name="tag",
            options={
                "ordering": ("name",),
                "verbose_name": "Тэг",
                "verbose_name_plural": "Тэги",
            },
        ),
        migrations.AddField(
            model_name="ingredient",
            name="measurement_unit",
            field=models.CharField(
                default=0, max_length=100, verbose_name="Единица измерения"
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="ingredient",
            name="name",
            field=models.CharField(
                default=0, max_length=100, verbose_name="Ингредиент"
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="recipe",
            name="author",
            field=models.ForeignKey(
                default=0,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="recipes",
                to="users.user",
                verbose_name="Автор",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="recipe",
            name="cooking_time",
            field=models.PositiveBigIntegerField(
                default=0, verbose_name="Время приготовления"
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="recipe",
            name="image",
            field=models.ImageField(
                default=0,
                upload_to="recipes/images/",
                verbose_name="Изображение",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="recipe",
            name="is_favorited",
            field=models.BooleanField(blank=True, default=False),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="recipe",
            name="is_in_shopping_cart",
            field=models.BooleanField(blank=True, default=False),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="recipe",
            name="name",
            field=models.CharField(
                default=0, max_length=100, verbose_name="Рецепт"
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="recipe",
            name="tags",
            field=models.ManyToManyField(
                related_name="recipes", to="recipe.Tag"
            ),
        ),
        migrations.AddField(
            model_name="recipe",
            name="text",
            field=models.TextField(default=0, verbose_name="Описание рецепта"),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="tag",
            name="color",
            field=models.CharField(default=0, max_length=16),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="tag",
            name="name",
            field=models.CharField(
                default=0, max_length=50, verbose_name="Тэг"
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="tag",
            name="slug",
            field=models.SlugField(
                default=0,
                max_length=30,
                validators=[
                    django.core.validators.RegexValidator(
                        re.compile("^[-a-zA-Z0-9_]+\\Z"),
                        "Enter a valid “slug” consisting of letters, numbers, underscores or hyphens.",
                        "invalid",
                    )
                ],
                verbose_name="Слаг",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="recipeingredient",
            name="ingredient",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="recipe.ingredient",
            ),
        ),
        migrations.AddField(
            model_name="recipeingredient",
            name="recipe",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="recipe.recipe"
            ),
        ),
        migrations.AddField(
            model_name="recipe",
            name="ingredients",
            field=models.ManyToManyField(
                through="recipe.RecipeIngredient", to="recipe.Ingredient"
            ),
        ),
    ]
